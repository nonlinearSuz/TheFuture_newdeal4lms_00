<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.supmtr.dao.SupmtrDao">
<!-- 주석!! -->
	<!-- 선생님의 경우 selectBox조회 -->
	<select id="selectBoxSet" resultType="kr.happyjob.study.supmtr.model.LectureModel">
	
		select lec_no, lec_name, lec_prof from tb_lecture where lec_prof = #{loginID} and lecOpen_yn = 'Y';
	</select>
	
	<!-- 학생의 경우 selectBox조회 : -->
		<select id="selectBoxSetStudent" resultType="kr.happyjob.study.supmtr.model.LectureModel">
	        select rl.lec_no,			
                le.lec_name
        from tb_request_list rl
			inner join tb_lecture le on le.lec_no = rl.lec_no        
        where rl.loginID = #{loginID} and rl.acc_yn ='Y';
	</select>
	
	
	
	
	<!-- 스터디파일 목록 조회 :: 선생님일경우에-->
	<select id="stufileList" resultType="kr.happyjob.study.supmtr.model.StudyFileModel">
		/*kr.happy.study.system.dao.ComnCodDao.listComnGrpCod*/
		select 	sf.lec_no
				,le.lec_name
				,le.lec_prof
				,sf.study_file_no	
		        ,sf.study_file_title
		        ,sf.study_file_cont
		        ,sf.enr_user
		         ,DATE_FORMAT(sf.enr_date, '%Y-%m-%d') as enr_date
		        ,sf.file_no
		        ,fi.file_name
		        ,fi.file_logic_path
		        ,fi.file_physic_path
		        ,fi.file_size
		        ,fi.file_ext
		        from tb_study_file sf
					left outer join tb_files fi on sf.file_no = fi.file_no
					inner join tb_lecture le on le.lec_no = sf.lec_no
					
			where le.lec_prof = #{lec_prof}
					
			<if test="(lec_no !=null) and (!lec_no.equals(''))  ">  
				and sf.lec_no = #{lec_no}
				   </if>
			
		
	
		
		ORDER BY sf.study_file_no DESC
		LIMIT #{pageIndex}, #{pageSize}
		
		
	</select>
	
	
	
	
	
	<!-- 스터디파일 목록 조회 :: 학생일경우에-->
	<select id="stufileListByStudent" resultType="kr.happyjob.study.supmtr.model.StudyFileModel">
		/*kr.happy.study.system.dao.ComnCodDao.listComnGrpCod*/
		select 	sf.lec_no
				,le.lec_name
				,le.lec_prof
				,rl.loginID
				,sf.study_file_no	
		        ,sf.study_file_title
		        ,sf.study_file_cont
		        ,sf.enr_user
		      ,DATE_FORMAT(sf.enr_date, '%Y-%m-%d') as enr_date
		        ,sf.file_no
		        ,fi.file_name
		        ,fi.file_logic_path
		        ,fi.file_physic_path
		        ,fi.file_size
		        ,fi.file_ext
		        from tb_study_file sf
					left outer join tb_files fi on sf.file_no = fi.file_no
					inner join tb_lecture le on le.lec_no = sf.lec_no
					inner join tb_request_list rl on rl.lec_no = le.lec_no
			where rl.loginID = #{loginId} and rl.acc_yn = 'Y'
			
			
				
			<if test="(lec_no !=null) and (!lec_no.equals(''))  ">  
				and sf.lec_no = #{lec_no}
				   </if>
			
		

		
		ORDER BY sf.study_file_no DESC
		LIMIT #{pageIndex}, #{pageSize}
		
		
	</select>
	
	
	
	
	
	
	
	
	<!-- 선생님이 강의하는  목록 총 갯수 조회 -->
	<select id="countStufileList" resultType="int">
		/*kr.happy.study.system.dao.ComnCodDao.countListComnGrpCod*/
		select  count(*) from tb_study_file sf
					left outer join tb_files fi on sf.file_no = fi.file_no
					inner join tb_lecture le on le.lec_no = sf.lec_no
			where le.lec_prof = #{lec_prof}
			
			
			<if test="(lec_no !=null) and (!lec_no.equals(''))  ">  
				and sf.lec_no = #{lec_no}
				   </if>			
		
			
	</select>
	
	<!-- 학생이 승인받은 강의의 스터디파일목록 총 갯수조회 -->
		<select id="countStufileListByStudent" resultType="int">
		/*kr.happy.study.system.dao.ComnCodDao.countListComnGrpCod*/
		select  count(*) from tb_study_file sf
					left outer join tb_files fi on sf.file_no = fi.file_no
					inner join tb_lecture le on le.lec_no = sf.lec_no
						inner join tb_request_list rl on rl.lec_no = le.lec_no
			where rl.loginID = #{loginId} and rl.acc_yn = 'Y'
			
			
			<if test="(lec_no !=null) and (!lec_no.equals(''))  ">  
				and sf.lec_no = #{lec_no}
				   </if>			
		
	</select>
	
	<!-- 스터디파일단건조회 -->
		<select id="stufileSelectOne" resultType="kr.happyjob.study.supmtr.model.StudyFileModel">
		/*kr.happy.study.system.dao.ComnCodDao.listComnGrpCod*/
		select 	sf.lec_no
				,le.lec_name
				,sf.study_file_no	
		        ,sf.study_file_title
		        ,sf.study_file_cont
		        ,sf.enr_user
		      ,DATE_FORMAT(sf.enr_date, '%Y-%m-%d') as enr_date
		        ,sf.file_no
		        ,fi.file_name
		        ,fi.file_logic_path
		        ,fi.file_physic_path
		        ,fi.file_size
		        ,fi.file_ext
		        from tb_study_file sf
					left outer join tb_files fi on sf.file_no = fi.file_no
					inner join tb_lecture le on le.lec_no = sf.lec_no			
		
				where sf.study_file_no = #{study_file_no} and sf.lec_no = #{lec_no}		
				
	</select>
	
	
		<insert id="stufileInsertFile"> 
	<!-- before insert문ㅅ닐행전에 쿼리문실행해라. --> <!-- no라는 변수를 형성함. -->
	    <selectKey resultType="int" keyProperty="no" order="BEFORE"> <!-- order before/after -->
          select ifnull(max(study_file_no),0) + 1 from tb_study_file where lec_no =#{lecselect}
        </selectKey>   
	
		insert into tb_study_file
			(
				lec_no
				,study_file_no
				,study_file_title
				,study_file_cont
				,enr_user
				,enr_date
				,file_no
			
			)
			values (
				<!-- no : selectKey -->
				#{lecselect}
				,#{no}
				,#{study_file_title}
				,#{study_file_cont}
				,#{loginId}	
				,now()
	
				<if test="fileexist eq 'N'.toString()">			
				,0
				</if>
				<if test = "fileexist eq 'Y'.toString()" >
				,(select ifnull(max(file_no),0) from tb_files)
				</if>
				
			)
	</insert>
	
	
		<insert id ="fileInsert">
		    <selectKey resultType="int" keyProperty="no" order="BEFORE"> <!-- order before/after -->
          select ifnull(max(file_no),0) + 1 from tb_files
        </selectKey>   
		insert into tb_files 
			(
			
				 file_no
				 ,file_name
				 ,file_logic_path
				 ,file_physic_path
				 ,file_size
				 ,file_ext
				 ,enr_date
				
			) values (
			
				#{no}
				,#{fileReturn.file_nm}
					,#{fileReturn.vrfile_loc}
				,#{fileReturn.file_loc}
				,#{fileReturn.file_size}
					,#{fileReturn.fileExtension}
				,now()
			)
			
			
	</insert>
	
	
		<delete id="deleteFileInfo">
 <!--  	delete from tb_file where file_no = (select file_no from tb_notice where notice_no = #{notice_no})  -->
	delete from tb_files where file_no = #{file_no}
	</delete>
	
		<update id="stufileUpdateFile">
			update tb_study_file
			set study_file_title = #{study_file_title}
				,study_file_cont = #{study_file_cont}
				,enr_date = now()
				<if test="fileexist eq 'Y'.toString()"> <!-- filePrc는 따질필요없다. -->
				,file_no = (select ifnull(max(file_no),0) from tb_files)
				</if>
				<if test="fileexist eq 'N'.toString()">
				,file_no = 0
				</if>
				where study_file_no = #{study_file_no} and lec_no = #{lec_no}	
		
	</update>
	
	
		<delete id="stufileDeleteFile">
	 delete from tb_study_file where study_file_no = #{study_file_no} and lec_no = #{lec_no}	
	
	</delete>
	
</mapper>

	