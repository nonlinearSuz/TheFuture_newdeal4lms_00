<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.supsvy.dao.SupsvyDao">
	
	 
	<!-- [관리자] 강사 리스트  totProfList -->
	<select id="totProfList" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
		select ui.loginID 
      		  ,ui.name
     		  ,ui.user_hp
      		  ,ui.user_email
      		  ,date_format(lc.lec_enr,'%Y.%m.%d') as lec_enr 
      		  ,lc.lec_prof
  		 from tb_userinfo ui
  		 inner join  tb_lecture lc on ui.loginID = lc.lec_prof  
  		 <where>
  		 	 ui.user_type ="T" and ui.lec_yn="Y" and lc.lecOpen_yn ="Y"
  		 	 <if test="(sname != null) and (!sname.equals(''))">
				and ui.name Like CONCAT('%', #{sname}, '%')
			</if>		 
  		 </where>
  		 LIMIT #{pageindex}, #{pageSize}
	</select>
	

	<!-- [관리자] 강사 리스트 카운트 cntProfList -->
	<select id="cntProfList" resultType="int">
		select count(*)
  		 from tb_userinfo ui
  		 inner join  tb_lecture lc on ui.loginID = lc.lec_prof  
  		 <where>
  		 	 ui.user_type ="T" and ui.lec_yn="Y" and lc.lecOpen_yn ="Y"	 
  		 </where>
	</select>
	
	<!-- [관리자] 설문조사 대상 전체 강의 리스트  : 강의 개설 승인 받은 강의 totLecList -->
	<select id="totLecList" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
		select 
  				lc.lec_no
  				,ui.name
  				,lc.lec_name
			    ,lc.lec_prof
			    ,ui.loginID prof_id
			    ,date_format(lc.lec_start,'%Y.%m.%d') as lec_start
			    ,date_format(lc.lec_end,'%Y.%m.%d') as lec_end
			    ,ifnull(A.cnt,0) as lec_signcnt
			    ,lc.max_no
		from tb_lecture lc
		inner join tb_userinfo ui ON ui.loginID = lc.lec_prof
		left outer join (select lec_no, count(*) cnt from tb_request_list WHERE acc_yn NOT IN ('N' ,'C') group by lec_no) A on A.lec_no= lc.lec_no
		where 
		    ui.loginId = #{prof_id} and   <!-- 강사 ID를 넘겨받아서 강사가 진행하는 과목을 끌어와야함.  -->
		    lc.lecOpen_yn="Y" 
	</select>
	
	<!-- [관리자] 설문조사 대상 전체 강의 리스트 카운트 cntLecList -->
	<select id="cntLecList" resultType="int">
		select count(*)
		  from tb_lecture lc
		  inner join tb_userinfo ui on ui.loginID = lc.lec_prof  
		  where 
		    ui.user_type ="T"  and ui.lec_yn="Y" and lc.lecOpen_yn ="Y"
		    and lc.lec_prof =#{prof_id}
	</select>
	
	
	<!-- [학생] 설문조사 대상 전체 강의 리스트  : 자신이 신청한 강의 stusurveyLecList -->
	<select id="stusurveyLecList" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
	  select lc.lec_name
	        ,lc.lec_prof
	        ,ui.name
	        ,ui.loginID
	        ,rq.loginID
	        ,ui.user_hp
	        ,ui.user_email
	        ,lc.lec_end
	    from tb_request_list rq
	    inner join tb_lecture lc ON lc.lec_no = rq.lec_no
	    left outer join tb_userinfo ui ON ui.loginID = lc.lec_prof 
	    where rq.acc_yn="Y" and rq.loginID= #{loginID}
	     LIMIT #{pageindex}, #{pageSize}
	</select>
	
	
	<!-- [학생] 설문조사 대상 전체 강의 리스트  카운트  cntStusurveyLecList -->
	<select id="cntStusurveyLecList" resultType="int">
			select count(*)
		    from tb_request_list rq
		    inner join tb_lecture lc ON lc.lec_no = rq.lec_no
		    left outer join tb_userinfo ui ON ui.loginID = lc.lec_prof 
		    where rq.acc_yn="Y" and rq.loginID= #{loginID}
	</select>
	
	
	<!-- [학생] 설문조사 대상 강의 상세 정보. -->
	 <select id="lecDtInfo" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
		select  lc.lec_name
		        ,lc.lec_prof
		        ,ui.name
		        ,ui.loginID
		        ,rq.loginID
		        ,lc.lec_start
		        ,lc.lec_end
		        ,rm.rm_name
		        ,lc.lec_goal
		        ,lec_contents
	    from   tb_request_list rq
	    inner  join tb_lecture lc ON lc.lec_no = rq.lec_no
	    inner  join tb_room rm ON rm.room_no = lc.room_no 
	    left   outer join tb_userinfo ui ON ui.loginID = lc.lec_prof 
	    where  rq.acc_yn="Y" and rq.loginID= #{loginID} and lc.lec_prof=#{prof_id}
	</select> 
	
	<!-- 20230630 -->
	<!-- [설문조사] 전체 문항 및 각 문항의 보기 예시   -->
	<select id="svyQList" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
	 SELECT
			  sd.sv_no,
			  sd.sv_qst_no,
			  sd.qst_content,
			  MAX(CASE WHEN se.ex_num = 1 THEN se.ex_num END) AS ex_num1,
			  MAX(CASE WHEN se.ex_num = 2 THEN se.ex_num END) AS ex_num2,
			  MAX(CASE WHEN se.ex_num = 3 THEN se.ex_num END) AS ex_num3,
			  MAX(CASE WHEN se.ex_num = 4 THEN se.ex_num END) AS ex_num4,
			  MAX(CASE WHEN se.ex_num = 5 THEN se.ex_num END) AS ex_num5,
			  MAX(CASE WHEN se.ex_num = 1 THEN se.ex_content END) AS ex_content
		
		FROM tb_survey_dt sd 
		INNER JOIN tb_survey_ex se ON se.sv_no = sd.sv_no AND se.sv_qst_no = sd.sv_qst_no
<!-- 		WHERE
			  sd.sv_qst_no = 2 -->
		GROUP BY
			  sd.sv_no,
			  sd.sv_qst_no,
			  sd.qst_content; 
	</select>
	
	<!-- [설문조사] 문항 전체 갯수    -->
	<select id="cntsvyQList" resultType="int">
	 	 select count(*) as total_cnt
  		   from tb_survey_dt
	</select>
	
	
	
	<!-- [설문조사] 설문조사 응시할  설문조사 1set 가져오기  -->
	<!-- <select id="takeSurvey" resultType="kr.happyjob.study.supsvy.model.SurveyModel">
		  select sv.sv_no
		        ,sv.sv_name
		        ,sd.sv_qst_no
		        ,sd.qst_content
		        ,se.ex_num
		        ,se.ex_content
		  from tb_survey sv
		  inner join tb_survey_dt sd ON sd.sv_no = sv.sv_no
		  inner join tb_survey_ex se ON se.sv_qst_no = sd.sv_qst_no
		  where lc.lec_no = #{lec_no}
	</select> -->
	
	<!--[설문조사] 설문 제출  -->
	<insert id="surveySubmit">
	
	
	
	</insert>
	
	
</mapper>