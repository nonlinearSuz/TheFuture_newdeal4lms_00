package kr.happyjob.study.admhrd.service;

import java.io.File;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.happyjob.study.admhrd.dao.AdmHrdDao;
import kr.happyjob.study.admhrd.model.TeacherModel;
import kr.happyjob.study.common.comnUtils.FileUtilCho;


@Service
public class AdmHrdServiceImpl implements AdmHrdService {

	// Set logger // 로그를 남기기 위해 logger 객체 생성. 현재 클래스의 logger를 가져옴
	private final Logger logger = LogManager.getLogger(this.getClass());
	
	// Get class name for logger //현재 클래스의 이름을 가져와 문자열로 정렬
	private final String className = this.getClass().toString();
	
	// 의존성 주입을 위해 MngNotDao 인터페이스의 구현체를 자동으로 주입
	@Autowired
	AdmHrdDao admHrdDao;
	
/*	@Value("${fileUpload.rootPath}")
	private String rootPath;    // W:\\FileRepository
	
	@Value("${fileUpload.virtualRootPath}")
	private String virtualrootPath;  // /serverfile
	
	@Value("${fileUpload.noticePath}")
	private String noticePath;   // notice
*/		
	
	/** 목록 조회 */
	public List<TeacherModel> teacherlist(Map<String, Object> paramMap) throws Exception {
		return admHrdDao.teacherlist(paramMap);
	}
	
	/** 목록 카운트 조회 */
	public int countteacherlist(Map<String, Object> paramMap) throws Exception {
		return admHrdDao.countteacherlist(paramMap);
	}
	
	/** 회원정보(비고) 수정 */
	public void userEtc(Map<String, Object> paramMap) throws Exception {
		admHrdDao.userEtc(paramMap);
	}
	
	/** 승인여부 */
	public void approval(String loginID) throws Exception {
		admHrdDao.approval(loginID);
	}	
	
	/** 탈퇴 */
	public void teacherWithdrawal(String loginID)  throws Exception {
		admHrdDao.teacherWithdrawal(loginID);
	}
	
	/* 한건 조회 */
	public TeacherModel teacherselectone(Map<String, Object> paramMap) throws Exception {
		return admHrdDao.teacherselectone(paramMap);
	}
	
	/* 한건 조회 강의 */
	public List<TeacherModel> teacherselectonelec(Map<String, Object> paramMap) throws Exception {
		return admHrdDao.teacherselectonelec(paramMap);
	}





	/** 강사 회원 탈퇴 */
//	public int teacheraccountcancel(Map<String, Object> paramMap) throws Exception {
//		/*paramMap.put("", "N");*/
//		return admHrdDao.teacheraccountcancel(paramMap);
//	}
	
	/*
	*//** 등록 *//*
	public int noticeinsert(Map<String, Object> paramMap) throws Exception {
		paramMap.put("fileprc", "N");
		return mngNotDao.noticeinsert(paramMap);
	}
	
	*//** 수정 *//*
	public int noticeupdate(Map<String, Object> paramMap) throws Exception {
		paramMap.put("fileprc", "N");
		return mngNotDao.noticeupdate(paramMap);
	}
	
	*//** 삭제 *//*
	public int noticedelete(Map<String, Object> paramMap) throws Exception {
		return mngNotDao.noticedelete(paramMap);
	}
	
	*//** 등록 파일 *//*
	public int noticeinsertfile(Map<String, Object> paramMap, HttpServletRequest request) throws Exception {
		
		MultipartHttpServletRequest multipartHttpServletRequest = (MultipartHttpServletRequest) request;
		
		// private String rootPath;    // W:\\FileRepository
		// private String virtualrootPath;  // /serverfile
		// private String noticePath;   // notice
		
		String noticedir = File.separator + noticePath + File.separator;
		FileUtilCho fileup = new FileUtilCho(multipartHttpServletRequest,rootPath, virtualrootPath, noticedir);
		Map filereturn = fileup.uploadFiles();
		
		//map.put("file_nm", file_nm);
        //map.put("file_size", file_Size);
        //map.put("file_loc", file_loc);
        //map.put("vrfile_loc", vrfile_loc);
        //map.put("fileExtension", fileExtension);
		
		String upfile = (String) filereturn.get("file_nm");
		paramMap.put("fileprc", "Y");
		
		if(upfile == "" || upfile == null) {
			paramMap.put("fileexist", "N");
		} else {
			paramMap.put("filereturn", filereturn);
			paramMap.put("fileexist", "Y");
			
			mngNotDao.fileinsert(paramMap);
		}
		
		return mngNotDao.noticeinsert(paramMap);
	}
	
	*//** 수정 파일 *//*
	public int noticeupdatefile(Map<String, Object> paramMap, HttpServletRequest request) throws Exception {
		
		NoticeModel selectone = mngNotDao.noticeselectone(paramMap);
		
		if(selectone.getFile_name() != "" && selectone.getFile_name() != null) {
			File attfile = new File(selectone.getPhysic_path());     
			attfile.delete();
			
			//notice_no			
			// tb_file delete
			mngNotDao.deletefileinfo(paramMap);
		} 
				
				
		
		MultipartHttpServletRequest multipartHttpServletRequest = (MultipartHttpServletRequest) request;
				
		String noticedir = File.separator + noticePath + File.separator;
		FileUtilCho fileup = new FileUtilCho(multipartHttpServletRequest,rootPath, virtualrootPath, noticedir);
		Map filereturn = fileup.uploadFiles();
				
		String upfile = (String) filereturn.get("file_nm");
		paramMap.put("fileprc", "Y");
		
		if(upfile == "" || upfile == null) {
			paramMap.put("fileexist", "N");
		} else {
			paramMap.put("filereturn", filereturn);
			paramMap.put("fileexist", "Y");
			
			mngNotDao.fileinsert(paramMap);
		}
		
		return mngNotDao.noticeupdatefile(paramMap);		
		
	}
	
	*//** 삭제  파일*//*
	public int noticedeletefile(Map<String, Object> paramMap) throws Exception {
		
        NoticeModel selectone = mngNotDao.noticeselectone(paramMap);
		
		if(selectone.getFile_name() != "" && selectone.getFile_name() != null) {
			File attfile = new File(selectone.getPhysic_path());     
			attfile.delete();
			
			//notice_no			
			// tb_file delete
			mngNotDao.deletefileinfo(paramMap);
		} 
		
		return mngNotDao.noticedeletefile(paramMap);
	}*/
	
}
