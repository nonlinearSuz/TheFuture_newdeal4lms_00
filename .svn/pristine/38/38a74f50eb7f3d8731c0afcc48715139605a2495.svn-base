package kr.happyjob.study.suplcd.controller;

import java.io.File;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.common.comnUtils.ComnCodUtil;
import kr.happyjob.study.suplcd.model.LectureDtPlanModel;
import kr.happyjob.study.suplcd.service.SuplcdService;




@Controller
@RequestMapping("/suplcd/")
public class SuplcdController {
   
	@Autowired
	SuplcdService suplcdService;
	
	//Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());
	
	//Get class name for logger
	private final String className = this.getClass().toString();
	
	
	
	/**
	 *강의 계획서 초기화면
	 */
	@RequestMapping("lecturePlan.do")
	public String lecturePlan(Model model, @RequestParam Map<String,Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception{
		
		
		
		/*paramMap.put("my")*/
		
		logger.info("+ Start " + className + ".lecturePlan");
        logger.info("   - paramMap : " + paramMap);
      
        logger.info("+ End " + className + ".lecturePlan");
		
		
		return "suplcd/lecturePlanList";
	}
	
	/** 자신의 강의 리스트 화면*/
	@RequestMapping("lecturePlanList.do")
	public String totalLecPlanList(Model model,@RequestParam Map<String,Object> paramMap,HttpServletRequest request,
			HttpServletResponse response,HttpSession session) throws Exception {
		
		  paramMap.put("prof_id",session.getAttribute("loginId"));
		  
		  logger.info("+ Start " + className + ".lecturePlanListlist");
	      logger.info("   - paramMap : " + paramMap);
	      logger.info("★★★★★★★★★현재 접속한 사람의 유저타입 : "+ session.getAttribute("userType")); // T: 강사 || S: 학생 || M :관리자
	      
	      
	      /**공통 페이징 처리 */
	      int pagenum = Integer.parseInt((String) paramMap.get("pagenum"));
	      int pageSize = Integer.parseInt((String) paramMap.get("pageSize"));
	      int pageindex = (pagenum - 1) * pageSize;
	      
	      paramMap.put("pageSize", pageSize);
	      paramMap.put("pageindex", pageindex);
	      
	      
	     /** 리턴 페이지 처리 */
			String returnpage = "";
			
		 /**유저타입 세션에서 가져와서 선언 */
		 String userType = session.getAttribute("userType").toString();   
		
		 /** 로그인 아이디 세션에서 가져와서 선언 */
		 String loginID = (String) session.getAttribute("loginId");
		
			
		     if("T".equals(userType)){ //강사일 경우 
		    	 paramMap.put("loginID", loginID);
		    	 
		    	 logger.info(" ++++ 강사 입니다.++++");
		    	  paramMap.put("loginID",loginID);  
		    	  List<LectureDtPlanModel> profLecPlanList = suplcdService.profLecPlanList(paramMap);
			      int totalcnt = suplcdService.cntProfLecPlanList(paramMap);
			      
			      model.addAttribute("profLecPlanList", profLecPlanList);
			      model.addAttribute("totalcnt", totalcnt);
			      logger.info("+ totalcnt " + totalcnt + "개 가져옴~ " +".lecturePlanList");
			      
			      returnpage = "suplcd/proflectureListgrd";
		    	
		      }/*else if("S".equals(userType)){ // 학생일 경우
		    	  paramMap.put("loginID", loginID);
		      }*/else { // "M" 관리자일경우
		    	  paramMap.put("loginID", loginID);
		    	  
		    	  logger.info(" ++++ 관리자 입니다.++++");
		    	  paramMap.put("loginID",loginID);  
		    	  List<LectureDtPlanModel> masLecPlanList = suplcdService.totalLecPlanList(paramMap);
			      int totalcnt = suplcdService.cntLecPlanList(paramMap);
			      
			      model.addAttribute("masLecPlanList", masLecPlanList);
			      model.addAttribute("totalcnt", totalcnt);
			      logger.info("+ totalcnt " + totalcnt + "개 가져옴~ " +".lecturePlanList");
			      
			      returnpage = "suplcd/lecturePlanListgrd";
		      }
		 
	    
	      
	    
	      logger.info("+ End " + className + ".lecturePlanList");
	      
	      
	      
	      return returnpage;  
	}
	
	/*[관리자]강의 승인 */
	   @RequestMapping("lecApprove.do")
		@ResponseBody
		public Map<String, Object> del_lec(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception {
			
			logger.info("+ Start " + className + ".delLec");
			logger.info("   - paramMap : " + paramMap);
			logger.info("=====================del Lec.do Controller 탔어요~~================================");

		   paramMap.put("loginid", (String) session.getAttribute("loginId"));
		
		
		      int returnvalue = 0;
		
		      returnvalue = suplcdService.lecApprovUpdate(paramMap);      
		
		      Map<String, Object> returnmap = new HashMap<String, Object>();
		
		      returnmap.put("returnvalue", returnvalue);

			
			logger.info("+ End " + className + ".delLec");
			
			return returnmap;
		}
	   
	
	
}